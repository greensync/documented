#!/usr/bin/env ruby
require 'rubocop'

################################################################################
# Usage:
#   documented <file_path>
#
# Example:
#   documented spec/example_spec.rb
################################################################################

file_path = File.join(Dir.pwd, ARGV.first)
code = File.read(file_path)
source = RuboCop::ProcessedSource.new(code, 3)
source_buffer = source.buffer
rewriter = Parser::Source::TreeRewriter.new(source_buffer)

setup = <<-RUBY
  # TODO: This needs to be `require 'documented'` to work outside of development.
  \n require File.expand_path('../lib/documented')
  Documented.setup
RUBY
rewriter.insert_after(source.ast.children.first.loc.expression, setup)

source.comments.each do |comment|
  range = comment.location.expression

  if comment.text.start_with?('# documented:enable')
    rewriter.replace(range, "Documented.enable")
  elsif comment.text.start_with?('# documented:disable')
    rewriter.replace(range, "Documented.disable")
  end
end

file_name = 'tmp-' + File.basename(file_path)
directory = File.dirname(file_path)
file_path = File.join(directory, file_name)

File.write(file_path, rewriter.process)

# TODO: Use RSpec or Cucumber depending on file extension.
# file_extension = File.extname(file_path)
system("ruby #{file_path}")

File.delete(file_path)
