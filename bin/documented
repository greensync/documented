#!/usr/bin/env ruby

# require 'parser/current'
# require 'unparser'
require 'rubocop'

################################################################################
# Usage:
#   documented <file_path>
#
# Example:
#   documented spec/example_spec.rb
################################################################################

file_path = ARGV.first

code = File.read(file_path)
source = RuboCop::ProcessedSource.new(code, 3)
source_buffer = source.buffer
rewriter = Parser::Source::TreeRewriter.new(source_buffer)

source.ast.children.filter { |child| child.deconstruct[2] == :require_relative }.map do |child|
  path = child.deconstruct[3].deconstruct[1]
  range = child&.location&.expression
  
  rewriter.replace(range, "require File.expand_path('#{path}')")
end

eval(rewriter.process)

# Documented.setup()
# `#{args}`

# parsed = Parser::CurrentRuby.parse_file(file_path)
# unparsed = Unparser.unparse(processed)
